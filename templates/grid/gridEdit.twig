{% block body %}
    <style>
        .cropper-container {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100%;
        }
    </style>

    <div class="row mb-5 pb-5">
        <div class="col-lg-6 col-12 mb-3">
            <div class="container mb-3" style="width: 70%; height: 70%;">
                {% if itemType != 0 %}
                    <img id="image" src="" alt="">
                {% else %}
                    <img id="image" src="" alt="" type="hidden">
                {% endif %}
            </div>

            {% if itemType != 0 %}
                <label for="image">Selecione uma imagem:</label>
                <input type="file" id="inputImage" name="image" accept="image/*">
            {% else %}
                <input type="hidden" id="inputImage" name="image" accept="image/*">
            {% endif %}


        </div>


        <div class="col-lg-6 col-12 mb-3">
            <label for="{{type}}_id">Nome</label>
            <input name="{{type}}_name" id="{{type}}_name_edit" data-{{type}}_id="{{type}}" type="text" class="col-12" value="{{itemName}}">

            <label for="{{type}}_type" class="mt-3">Grade tipo</label>
            <div class="col-12">
                <select class="col-12" name="{{type}}_type" id="{{type}}_type_edit">
                    <option value="0" {% if itemType == 0 %}selected{% endif %}>Tamanho</option>
                    <option value="1" {% if itemType == 1 %}selected{% endif %}>Cor</option>
                </select>
            </div>

            <label for="{{type}}_position_edit" class="mt-3">Posição</label>
            <div class="col-12">
                <input type="number" id="{{ type }}_position_edit" value="{{ grid.positionSort }}">
            </div>

            <div class="col-lg-6 col-12 mb-3">
                <div class="col-12 mt-3">
                    {% if itemType != 0 %}
                        <label class="mb-2" for="croppedImageCanvas">Visualização:</label>
                    {% endif %}
                    <div class="canvas-wrapper">
                        <canvas id="croppedImageCanvas" width="50" height="50"></canvas>
                    </div>
                </div>
            </div>

        </div>

        {% if itemType != 0 %}
            <div class="col-12 mt-3">
                <button class="btn btn-primary save">Salvar</button>
            </div>
        {% endif %}

    </div>
    <script>
        var image = $('#image');
        var inputImage = $('#inputImage');

        inputImage.on('change', function (e) {
            var file = e.target.files[0];
            var reader = new FileReader();

            reader.onload = function (event) {
                image.attr('src', event.target.result);
                image.cropper('destroy').cropper({
                    aspectRatio: 1 / 1,
                    viewMode: 1,
                    autoCropArea: 1,
                    crop: function (event) {
                        var canvas = document.getElementById("croppedImageCanvas");
                        var ctx = canvas.getContext("2d");
                        var imageElement = image.get(0);

                        ctx.clearRect(0, 0, canvas.width, canvas.height);
                        ctx.save();
                        ctx.beginPath();
                        ctx.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, 2 * Math.PI);
                        ctx.closePath();
                        ctx.clip();

                        var scaleX = imageElement.naturalWidth / imageElement.width;
                        var scaleY = imageElement.naturalHeight / imageElement.height;
                        var offsetX = event.detail.x;
                        var offsetY = event.detail.y;
                        var width = event.detail.width;
                        var height = event.detail.height;

                        ctx.drawImage(
                            imageElement,
                            offsetX * scaleX,
                            offsetY * scaleY,
                            width * scaleX,
                            height * scaleY,
                            0,
                            0,
                            canvas.width,
                            canvas.height
                        );

                        ctx.beginPath();
                        ctx.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, 2 * Math.PI);
                        ctx.lineWidth = 5;
                        ctx.strokeStyle = '#ffffff';
                        ctx.stroke();
                        ctx.closePath();

                        ctx.restore();
                    }
                });
            };

            reader.readAsDataURL(file);
        });

        var itemId = {{ itemId }}
        $('.save').click(function (e) {
            var type = $(`#grid_type_edit`).val();
            if(type){

                var croppedImageCanvas = document.getElementById('croppedImageCanvas');
                var formData = new FormData();

                // Converte o canvas em um objeto Blob
                croppedImageCanvas.toBlob(function (blob) {
                    formData.append('image', blob, 'image.jpg');

                    formData.append('itemId', itemId); // Adicione as variáveis desejadas
                    formData.append('itemName', $(`#grid_name_edit`).val());
                    formData.append('itemType', $(`#grid_type_edit`).val());
                    formData.append('itemPosition', $(`#grid_position`).val());

                    $.ajax({
                        url: `edit_grid`,
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function () {
                            $.alert({
                                title: 'Sucesso!',
                                content: 'Editado com sucesso',
                            });
                            // loadingTableGrid(type, table)
                        }
                    });
                }, 'image/jpeg');
            } else {
                var formData = new FormData();
                formData.append('itemId', itemId); // Adicione as variáveis desejadas
                formData.append('itemName', $(`#grid_name_edit`).val());
                formData.append('itemType', $(`#grid_type_edit`).val());
                formData.append('itemPosition', $(`#grid_position_edit`).val());

                $.ajax({
                    url: `edit_grid`,
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function () {
                        $.alert({
                            title: 'Sucesso!',
                            content: 'Editado com sucesso',
                        });
                        // loadingTableGrid(type, table)
                    }
                });
            }

        });


    </script>
{% endblock %}
