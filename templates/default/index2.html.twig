{% extends 'base.html.twig' %}

{% block title %}{{ titlePage }}{% endblock %}

{% block body %}


    <html lang="pt-PT">
    <head>
        {{ parent() }}
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <!-- Bootstrap CSS -->
        {#        <link rel="stylesheet" href="{{ asset('css/styles.css') }}"> #}

        <title>Riot</title>
    </head>
    <body>

    <!--     barra procurar -->
    <div class="container ">
        <div class="row mt-4">
            <div class="col-2 border-primary d-none d-xl-block d-xxl-block "></div>
            <div class="col-xl-8 col-lg-10 col-md-10 col-sm-10 ">
                <div class="form-group d-flex justify-content-center py-1">
                    <input type="text" class="search-bar inputText py-1 col-12" placeholder="Pesquisar...">
                    <button type="submit" class="btn-search-div">
                        <i class="bi bi-search btn-search pt-0 mt-0"></i>
                    </button>
                    </form>
                </div>
            </div>
            {#            <div class="col-lg-2 col-sm-12  d-none d-lg-block pd-0 not"> #}
            {#                <div class="button-group d-flex justify-content-end"> #}
            {#                    <button id="login" type="button" class="btn btn-dark py-2 px-4  btn-login-r">Login</button> #}
            {#                    <button id="register" type="button" class="btn btn-primary px-3 btn-login-l">Register</button> #}
            {#                </div> #}
            {#            </div> #}
        </div>
    </div>
    <!--     fim barra -->
    {#    <!--   Banner principal --> #}
    {#    <div class="container mb-5"> #}
    {#        <div class="row"> #}
    {#            <div class="col-1 d-none d-xl-block d-xxl-block"> #}
    {#                <!-- linhas verticais --> #}
    {#                <div class="container-linhas d-flex flex-column align-items-center "> #}
    {#                    <div class="line-1 mb-4 mt-2"></div> #}

    {#                    <div class="icon-1 mb-4"> #}
    {#                        <a class="footer-facebook" target="_blank" ><i class="bi bi-facebook text-black-50 media"></i></a> #}

    {#                    </div> #}

    {#                    <div class="line-2 mb-3 mt-2"></div> #}

    {#                    <div class="icon-1 mb-4"> #}
    {#                        <a class="footer-facebook" target="_blank" ><i class="bi bi-instagram text-black-50 media"></i></a> #}
    {#                    </div> #}

    {#                    <div class="line-2 mb-3 mt-2"></div> #}

    {#                    <div class="icon-1 mb-3 mt-2"> #}
    {#                        <i class="bi bi-youtube text-black-50 media"></i> #}
    {#                    </div> #}
    {#                    <div class="line-1 mb-4 mt-2"></div> #}
    {#                </div> #}
    {#                <!-- .. --> #}

    {#            </div> #}
    {#            <!-- hero --> #}
    {#            <div class="col-xl-10 col-lg-12 col-md-12 col-sm-12 col-12  py-2 mt-2 justify-content-center "> #}
    {#                <div style="background-image:url('{% if banner1 is not empty %} {{ banner1.path }} {% endif %}');" #}
    {#                     class="hero pt-2 text-light d-flex flex-column align-items-center justify-content-center "> #}
    {#                    <div class="jumbotron mx-5"> #}
    {#                        <h1 class="display-4 font-weight-bold"> #}
    {#                            <b class="text-white">Explore a nossa seleção de ofertas</b> #}
    {#                        </h1> #}
    {#                        <p class="lead font-weight-normal"> #}
    {#                            <b>Aventura, Cultura, Desporto, Lazer...</b> #}
    {#                        </p> #}
    {#                    </div> #}
    {#                    <!--         aa --> #}
    {#                </div> #}
    {#            </div> <!-- 12 --> #}
    {#            <div class="col-1 d-none d-xl-block d-xxl-block "> #}

    {#                <!-- linhas verticais --> #}
    {#                <div class="container-linhas d-flex flex-column align-items-center "> #}
    {#                    <div class="line-1 mb-5 mt-2"></div> #}

    {#                    <div class="icon-1 mt-3 mb-5"> #}
    {#                        <p class="d-flex align-items-center text-rotate  ">PORTUGUÊS<i #}
    {#                                    class="bi bi-caret-right-fill ms-1"></i></p> #}
    {#                    </div> #}

    {#                    <div class="line-2 mb-4"></div> #}

    {#                    <div class="icon-1 mt-2"> #}
    {#                        <p class="d-flex align-items-center text-rotate ">EURO<i #}
    {#                                    class="bi bi-caret-right-fill ms-1"></i></p> #}

    {#                    </div> #}


    {#                    <div class="line-1 mb-2 mt-2"></div> #}
    {#                </div> #}
    {#                <!-- .. --> #}
    {#            </div> #}
    {#        </div> #}
    {#    </div> #}
    {#    <!--Fim banner --> #}
    <!-- icone chat -->
    <div class="chat-ballon">
        <i class="bi bi-chat-dots"></i>
    </div>
    <!--   Titulo detalhes -->
    {#    <div class="container-fluid"> #}
    {#        <div class="row"> #}
    {#            <div class="col-6  mt-2 "> #}
    {#                <h4>DESTAQUES</h4> #}
    {#            </div> #}
    {#            <div class="col-6  mt-2"> #}
    {#                <div class="buttons d-flex justify-content-end"> #}
    {#                    <button type="button" class="prev btn btn-light border-dark text-dark btn-sm"><</button> #}
    {#                    <button type="button" class="next  btn btn-dark btn-sm">></button> #}
    {#                </div> #}
    {#            </div> #}
    {#            <div id="productsHigh" class="col-12" ></div> #}
    {#        </div> #}
    {#    </div> #}


    <!--     fim titulo -->
    <!--     cards produtos -->

    <div class="container  ">
        <div class="row ">

            <div class="col-xl-3 text-center col-sm-12">
                <div id="filtros-selecionados"></div>
            </div>

            <div class="col-xl-12 text-center col-sm-12">
                <h5 id="producutsQuantity">Foram encontrados .</h5>
            </div>
            <div class="col-1 btn btn-dark d-block d-lg-none mb-3 vertical-button  ps-0 pe-4 fixed-left ps-2"
                 type="button" data-bs-toggle="offcanvas" data-bs-target="#menuAside">
                Filtrar produtos
            </div>

            <div class="offcanvas offcanvas-start p-0" tabindex="-1" style="z-index: 9999" id="menuAside">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title"></h5>
                    <button type="button" class="btn-close bg-danger text-reset" style="z-index: 3"
                            data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body p-0">
                    <div class="col-12 col-lg-3">
                        <div class="gw-sidebar">
                            <div id="gw-sidebar" class="gw-sidebar">
                                <div class="nano-content">
                                    <ul class="gw-nav gw-nav-list">
                                        <!-- Title -->
                                        <li class="init-un-active " style="background-color: #7494c4"><a
                                                    style="background-color:#7494c4" href="javascript:void(0)"> <span
                                                        class="gw-menu-text text-light fs-5">FILTROS</span> </a></li>
                                        <!-- CATEGORIES -->
                                        <li class="init-arrow-down"><a href="javascript:void(0)"> <span
                                                        class="gw-menu-text text-dark fs-5">Categorias</span> <b
                                                        class="gw-arrow icon-arrow-up"></b> </a>
                                            <ul class="gw-submenu" id="categories-mobile">

                                            </ul>
                                        </li>

                                        <!-- PREÇO -->
                                        <li class=" init-arrow-down"><a href="javascript:void(0)"> <span
                                                        class="gw-menu-text text-dark fs-5">Preços</span> <b
                                                        class="gw-arrow"></b> </a>
                                            <ul class="gw-submenu">
                                                <li class="px-3">
                                                    <input type="text" class="js-range-slider-mobile" name="my_range"
                                                           value=""/>

                                                </li>
                                            </ul>
                                        </li>
                                        <!-- FIM PREÇO -->

                                        <!-- BRANDS -->
                                        <li class="init-arrow-down"><a href="javascript:void(0)"> <span
                                                        class="gw-menu-text text-dark fs-5">Marcas</span> <b
                                                        class="gw-arrow icon-arrow-up8"></b> </a>
                                            <ul class="gw-submenu" id="brands-filter-mobile">

                                            </ul>
                                        </li>
                                        <!-- FIM BRANDS -->

                                        <li>
                                            <div class="row ">
                                                <button id="apply" style="background-color: #1c346c; color: #FFFFFF; border-style: none"
                                                        onclick="FilterProducts(1)">
                                                    Aplicar filtros selecionados
                                                </button>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-3 d-none d-lg-block d-xl-block ">
                <div class="gw-sidebar">
                    <div id="gw-sidebar" class="gw-sidebar">
                        <div class="nano-content">
                            <ul class="gw-nav gw-nav-list">
                                <!-- Title -->
                                <li class="init-un-active" style="background-color: #7494c4"><a
                                            style="background-color:#7494c4" href="javascript:void(0)"> <span
                                                class="gw-menu-text text-light fs-5">Filtros</span> </a></li>
                                <!-- CATEGORIES -->
                                <li class="init-arrow-down"><a href="javascript:void(0)"> <span
                                                class="gw-menu-text text-dark fs-5">Categorias</span> <b
                                                class="gw-arrow icon-arrow-up"></b> </a>
                                    <ul class="gw-submenu" id="categories">

                                    </ul>
                                </li>
                                <!-- FIM CATEGORIES -->


                                <!-- PREÇO -->
                                <li class=" init-arrow-down"><a href="javascript:void(0)"> <span
                                                class="gw-menu-text text-dark fs-5">Preço</span> <b
                                                class="gw-arrow"></b> </a>
                                    <ul class="gw-submenu">
                                        <li class="px-3">
                                            <input type="text" class="js-range-slider" name="my_range" value=""/>

                                        </li>
                                    </ul>
                                </li>
                                <!-- FIM PREÇO -->

                                <!-- BRANDS -->
                                <li class="init-arrow-down"><a href="javascript:void(0)"> <span
                                                class="gw-menu-text text-dark fs-5">Marcas</span> <b
                                                class="gw-arrow icon-arrow-up8"></b> </a>
                                    <ul class="gw-submenu" id="brands-filter-mobile">

                                    </ul>
                                </li>
                                <!-- FIM BRANDS -->

                                <li>
                                    <div class="row ">
                                        <button id="apply" class="" onclick="FilterProducts(0)" style="background-color: #1c346c; color: #FFFFFF; border-style: none">Aplicar filtros selecionados</button>
                                        </button>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <div id="products" class="ms-sm-3 ms-md-0 bg-grid col-12 col-lg-9"></div>
        </div>

        <!--fecha row produtos principal -->
        <div id="categories" class="row">

        </div> <!-- Row Category -->
        <div class="row mt-2">
            <div class="col-12 ">
                <nav aria-label="..." class="slider-dots2">


                </nav>
                {#                <buttom  class="page-item"><a class="page-link" href="#">Prev</a></buttom> #}
                {#                <buttom class="page-item"><a class="page-link" href="#">Next</a></buttom> #}
            </div>
        </div>

    </div>
    </body>
    </html>
{% endblock %}
    {% block javascripts %}
        {{ parent() }}

        <script>
            document.getElementById('register').addEventListener('click', function () {
                location.replace('/register_costumer');
            })
            document.getElementById('login').addEventListener('click', function () {
                location.replace('/login')
            })

            var searchProduct = '';
            var categoryIdProduct = '';
            var filtersProduct = '';

            {% if(search != '') %} searchProduct = '{{ search }}' {% endif %}

            {% if(categoryId != '') %} categoryIdProduct = {{ categoryId }} {% endif %}

                    {% if(filters != '') %} filtersProduct = '{{ filters }}' {% endif %}


            function getProducts(search, filtersProduct) {

                /**
                 * Carregar produtos gerais
                 */

                $.ajax({
                    type: "GET",
                    url: `/products`,
                    data: {search: search, filtersProduct: filtersProduct},
                    success: function (data) {
                        productsArray = data.products;

                        $('.search-bar').val(searchProduct);

                        if (data.searchName == 'false') {

                            $('#producutsQuantity').text(`Foram encontrados ${data.products.length} produtos`);
                            //debugger;
                        } else {

                            $('#producutsQuantity').text(`Foram encontrados ${data.products.length} produtos de "${data.searchName.toUpperCase()}"`);
                            //debugger;
                        }

                        var divProducts = document.getElementById('products');
                        divProducts.innerHTML = '';
                        createProductCard(data.products, divProducts)

                        $("#products").removeClass("slick-initialized slick-slider");
                        var numItems = data.products.length; // Obtém o número de itens
                        var slidesPerRow = 3; // Número de colunas por linha
                        var slidesToShow = slidesPerRow; // Inicialmente, definimos slidesToShow para o mesmo valor de slidesPerRow
                        var slidesToScroll = slidesPerRow; // Defina slidesToScroll para o mesmo valor de slidesPerRow

                        var row = 3;

                        if (numItems <= 3) {
                            row = 1

                        }
                        if (numItems > 3 && numItems <= 6) {
                            row = 2
                        }

                        $('#products').slick({
                            dots: true,
                            customPaging: function (slider, i) {
                                var thumb = $(slider.$slides[i]).data();
                                return `<a class="ball border border-2 page" data-id=${i + 1}>${i + 1}</a>`;
                            },
                            rows: row,
                            vertical: false,
                            infinite: false,
                            slidesToScroll: 3,
                            slidesToShow: 3,
                            accessibility: true,
                            variableWidth: false,
                            focusOnSelect: false,
                            centerMode: false,
                            responsive: [
                                {
                                    breakpoint: 1000,
                                    settings: {
                                        slidesToScroll: 2,
                                        slidesToShow: 2
                                    }
                                },
                                {
                                    breakpoint: 600,
                                    settings: {
                                        slidesToScroll: 1,
                                        slidesToShow: 1,
                                        rows: 9,
                                    }
                                }
                            ]
                        });

                        var pagination = document.getElementsByClassName('slick-dots')[0];
                        if (typeof pagination == 'undefined') {
                            let productsPage = document.getElementById('products');
                            productsPage.innerHTML += `<ul class="slick-dots" style="" role="tablist"></ul>`;
                            pagination = document.getElementsByClassName('slick-dots')[0];

                        }

                        let pages = `
                    <li class="slick-active" role="presentation"><a class="ball border border-2 page" data-id="1">1</a></li>
                    `;
                        for (let i = 1; i < Math.ceil(data.quantity / 9); ++i) {

                            pages += `
                        <li role="presentation" class=""><a class="ball border border-2" data-id="${i + 1}">${i + 1}</a></li>
                        `;
                        }

                        pagination.innerHTML = '';
                        pagination.innerHTML = pages;

                        const type = window.screen.width < 600;


                        $('.ball').click(function () {
                            scrollToTop();
                            $('.ball').removeClass('ballActive')
                            $(this).addClass('ballActive');

                            const page = $(this).data('id');

                            function animateWithPromise(targetSegs, duration, interval) {
                                return new Promise(function (resolve, reject) {
                                    var segs = 0;
                                    var step = (targetSegs - segs) / (duration / interval);

                                    var animationInterval = setInterval(function () {
                                        segs += step;
                                        $('.slick-track').css("transform", "translate3d(" + segs * 10 + "px, 0px, 0px)");

                                        if (Math.abs(segs - targetSegs) < Math.abs(step)) {
                                            clearInterval(animationInterval);
                                            resolve(); // A animação foi concluída com sucesso
                                        }
                                    }, interval);
                                });
                            }

                            animateWithPromise(100, 500, 5)
                                .then(function () {
                                    FilterProducts(type, page);
                                })
                                .catch(function (error) {
                                    console.error("Ocorreu um erro durante a animação: " + error);
                                });

                        })

                    }
                });

            }

            function scrollToTop() {
                // Verifique se o navegador suporta a propriedade 'document.documentElement'
                if (document.documentElement.scrollTop > 0) {
                    document.documentElement.scrollTop = 0; // Para navegadores modernos
                } else {
                    document.body.scrollTop = 0; // Para navegadores mais antigos
                }
            }


            function FilterProducts(type, page = null) {
                if (type) {
                    var menuLateral = document.getElementById("menuAside");
                    var offcanvas = bootstrap.Offcanvas.getInstance(menuLateral); // Obtenha a instância do menu offcanvas (necessário se estiver usando o Bootstrap)

                    if (page === null) {
                        offcanvas.hide(); // Esconda o menu lateral
                    }
                }

                if (type == 0) {
                    var filters = ['brands', 'equipaments', 'colors', 'sizes', 'categories', 'models'];

                    var prices = {
                        minPrice: $('.js-range-slider').data('from'),
                        maxPrice: $('.js-range-slider').data('to')
                    }
                } else {

                    var filters = ['brands-mobile', 'equipaments-mobile', 'colors-mobile', 'sizes-mobile', 'categories-mobile', 'models-mobile'];

                    var prices = {
                        minPrice: $('.js-range-slider-mobile').data('from'),
                        maxPrice: $('.js-range-slider-mobile').data('to')
                    }

                }

                var filterObjects = []
                for (const filter of filters) {

                    if ($(`input[name='${filter}[]']:checked`).length < 1) {
                        continue;
                    }
                    var selecteds = [];
                    $(`input[name='${filter}[]']:checked`).each(function () {
                        selecteds.push($(this).val());
                    });

                    filterObjects.push({filter: filter, selecteds: selecteds})
                }

                if (page != null) {
                    filterObjects.push({filter: 'page', page: page});
                }

                filterObjects.push({filter: 'price', prices: prices});

                var selectedFilters = btoa(JSON.stringify(filterObjects));

                var search = $('.search-bar').val();

                getProducts(search, selectedFilters);


            }

            getProducts(searchProduct, categoryIdProduct, filtersProduct);

            var productsArray;
            var resultados;


            function getProductsByArray(array, colunas, termo) {
                return array.filter((produto) => {
                    return colunas.some((coluna) => {
                        const valor = produto[coluna];
                        return valor && valor.toString().toLowerCase().includes(termo.toLowerCase());
                    });
                });
            }

            function createProductCard(productsJson, divProducts) {
                if (productsJson == []) {

                    divProducts.innerHTML += `
                            <div class=" col-md-4 col-sm-12 ml-2 mb-2 " >
                                <h2>No products found</h2>
                            </div>
                        `
                } else {
                    for (const product of productsJson) {
                        let colorDivs = '';
                        let moreTag = '';  // Defina o moreTag, caso seja usado em algum lugar.
                        let cont = 0;

                        divProducts.innerHTML += `
        <div class="card card-size col-md-4 col-sm-12 ml-2 mb-2 shadow">
            <a href="{{ bo_url }}product/${product.id}">
                <div class="info-card d-flex justify-content-between mx-4 mt-2">
                    <p class="bg-success text-light mt-3 px-2 py-1 rounded">Novo</p>
                    <p class="fx-10">
                        <i class="${product.isFavorite ? 'favorite bi bi-heart-fill text-danger' : 'favorite bi bi-suit-heart'}" data-product-id="${product.id}"></i>
                    </p>
                </div>
                <img width="500" style="object-fit: contain;" height="200" class="card-img-top image-fit" src="${product.image ? product.image : '/uploads/images/logo1.png'}" alt="Card image cap">
                <div class="card-body text-dark">
                    <span class="card-title d-block" ${colorDivs.length > 0 ? 'style="min-height: 46px"' : 'style="min-height: 70px"'}>${product.name}</span>
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="card-text card-price mb-0">${(product.price)}€</h6>
                        <small class="text-muted"></small>
                    </div>
                    <p class="card-text">
                        <small class="text-muted">${product.categoryName}</small>
                    </p>
                    <div class="mb-3">
                        <div class="color-options d-flex justify-content-start rounded-3">${colorDivs} ${moreTag}</div>
                    </div>
                </div>
            </a>
            <div class="button-cart d-flex justify-content-center mb-3">
                <button type="button" class="btn btn-success w-75 addProductToCart" data-product-id="${product.id}" ${product.stock < 1 ? 'disabled' : ''} style="${product.stock < 1 ? 'background-color: #636161;' : 'background-color: #000000;'}">
                    ${product.stock < 1 ? 'Sem stock' : 'Carrinho'}
                </button>
            </div>
        </div>
    `;
                    }

// Manter eventos separados por tipo de ação
                    $(document).on('click', '.favorite', function (event) {
                        event.preventDefault();
                        var $heartIcon = $(this);
                        var productId = $heartIcon.data('product-id');

                        if ($heartIcon.hasClass('bi-heart-fill')) {
                            $heartIcon.removeClass('bi-heart-fill text-danger').addClass('favorite bi bi-suit-heart');
                            $.ajax({
                                type: "POST",
                                url: "{{ path('delete_favorite_product') }}",
                                data: {productId: productId},
                                success: function (data) {
                                    $heartIcon.removeClass('favorite').off('click');
                                },
                                error: function (e) {
                                    Swal.fire({
                                        position: 'center',
                                        icon: 'error',
                                        title: 'Ocorreu um erro!',
                                        showConfirmButton: false,
                                        timer: 2500
                                    });
                                }
                            });
                        } else {
                            var url = "/add_product_to_favorite/" + productId;
                            $heartIcon.removeClass('favorite bi bi-suit-heart').addClass('bi-heart-fill text-danger');
                            $.ajax({
                                url: url,
                                type: 'POST',
                                success: function (data) {
                                    if (data.login) {
                                        location.replace('/login');
                                        return;
                                    }
                                    $heartIcon.removeClass('favorite').off('click');
                                },
                                error: function (e) {
                                    Swal.fire({
                                        position: 'center',
                                        icon: 'error',
                                        title: 'Ocorreu um erro!',
                                        showConfirmButton: false,
                                        timer: 2500
                                    });
                                }
                            });
                        }
                    });

                    $(document).off('click', '.addProductToCart').on('click', '.addProductToCart', function () {
                        const productId = $(this).data('product-id');
                        const productQuantity = 1;
                        const stock = $(this).data('stock'); // Certifique-se de que o estoque está sendo passado corretamente

                        if (stock < productQuantity) {
                            Swal.fire('stock indisponível!');
                            return;
                        }
                        const product = {productId: productId, colorId: 0, sizeId: 0, productQuantity: productQuantity};
                        addProductToCart(product);
                    });

                    function productCarousel(id, size, rows) {
                        $(`#${id}`).slick({
                            dots: true,
                            rows: rows,
                            prevArrow: '.prev',
                            nextArrow: ".next",
                            infinite: false,
                            slidesToScroll: size,
                            slidesToShow: size,
                            accessibility: true,
                            variableWidth: false,
                            focusOnSelect: false,
                            centerMode: false,
                            responsive: [
                                {
                                    breakpoint: 992,
                                    settings: {
                                        slidesToScroll: size,
                                        slidesToShow: size
                                    }
                                },
                                {
                                    breakpoint: 600,
                                    settings: {
                                        slidesToScroll: size,
                                        slidesToShow: size,
                                        row: 12
                                    }
                                }
                            ]
                        });
                    }

                }
            }


            function createCategory(categoriesJson, divCategories) {
                for (const category of categoriesJson) {
                    divCategories.innerHTML +=
                        `<div class=" col-6 col-md-4 col-sm-4 col-lg-3 mb-4 ">
                            <img height="250" style="border-radius: 19px;" class="card-img borderborder-radius-size" src="${category.image}"
                                 alt="Card image">
                            <div class="card-img-overlay  d-flex justify-content-center align-items-end ">
                                <h5 class="card-title justify-content-end font-white">${category.name}</h5>
                            </div>
                        </div>
                    </div>`
                }

            };

            $('.dropdown-item').click(function () {
                $("#products").removeClass("slick-initialized slick-slider");

                var categoryId = $(this).data('id');
                getProducts('', categoryId)
            })


            // iniciopag filtro de produtos

            $(document).ready(function () {
                var nav = function () {

                    $('.gw-nav > li > a').click(function () {


                        var gw_nav = $('.gw-nav');
                        // gw_nav.find('li').removeClass('active');
                        $('.gw-nav > li > ul > li').removeClass('active');

                        var checkElement = $(this).parent();
                        var ulDom = checkElement.find('.gw-submenu')[0];

                        if (ulDom == undefined) {
                            if ($(this).data('type') != 'title') {

                                // checkElement.addClass('active');
                            }
                            $('.gw-nav').find('li').find('ul:visible').slideUp();
                            return;
                        }

                        if (checkElement.hasClass('active')) {
                            checkElement.removeClass('active');

                        } else {
                            if (ulDom.style.display != 'block') {

                                gw_nav.find('li.init-arrow-up').removeClass('init-arrow-up').addClass('arrow-down');
                                gw_nav.find('li.arrow-up').removeClass('arrow-up').addClass('arrow-down');
                                checkElement.removeClass('init-arrow-down');
                                checkElement.removeClass('arrow-down');
                                checkElement.addClass('arrow-up');
                                checkElement.addClass('active');
                                // checkElement.find('ul').slideDown(300);
                            } else {
                                // checkElement.removeClass('init-arrow-up');
                                // checkElement.removeClass('arrow-up');
                                // checkElement.removeClass('active');
                                // checkElement.addClass('arrow-down');
                                // checkElement.find('ul').slideUp(300);

                            }
                        }


                    });

                    $('.gw-nav > li > ul > li > a').click(function () {
                        $(this).parent().parent().parent().removeClass('active');
                        $('.gw-nav > li > ul > li').removeClass('active');
                        $(this).parent().addClass('active')
                    });
                };
                nav();

                // fim filtro de produtos

                $(document).ready(function () {
                    $('.js-example-basic-multiple').select2({tags: true});
                });


            });


            function getFilters(filter) {
                $.ajax({
                    type: "GET",
                    url: `/admin/get_${filter}`,
                    success: function (filtersJson) {
                        var ul = document.getElementById(`${filter}-filter`);
                        ul.innerHTML = '';

                        for (const filterJson of filtersJson) {
                            ul.innerHTML +=
                                `<li class="ps-3">
                            <div class="form-check">
                                <input class="form-check-input ${filter} ${filterJson.name.replaceAll(' ', '')} checkbox-item ipt-menu brand-checkbox"
                                    type="checkbox"
                                    name="${filter}[]"
                                    id="flexCheckDefault"
                                    value="${filterJson.id}" data-name="${filterJson.name}">
                                <label class="form-check-label fs-5 lb-menu ps-2" for="flexCheckDefault">
                                    ${filterJson.name}
                                </label>
                            </div>
                        </li>`
                        }

                        $(`.${filter}`).click(function () {
                            var name = $(this).data('name');
                            if (!$(this).is(":checked")) {
                                removerFiltroPorNome(name)
                            } else {

                                adicionarFiltro(name);
                            }

                        })
                    }
                });


            }


            function getFilters(filter) {
                $.ajax({
                    type: "GET",
                    async: true,
                    url: `/admin/get_${filter}`,
                    success: function (filtersJson) {
                        var ul = document.getElementById(`${filter}-filter`);
                        var ulMobile = document.getElementById(`${filter}-filter-mobile`);
                        ul.innerHTML = '';
                        ulMobile.innerHTML = '';

                        for (const filterJson of filtersJson) {
                            ul.innerHTML +=
                                `<li class="ps-3">
                            <div class="form-check">
                                <input class="form-check-input ${filter} ${filterJson.name.replaceAll(' ', '')} checkbox-item ipt-menu brand-checkbox"
                                    type="checkbox"
                                    name="${filter}[]"
                                    id="flexCheckDefault"
                                    value="${filterJson.id}" data-name="${filterJson.name}">
                                <label class="form-check-label fs-5 lb-menu ps-2" for="flexCheckDefault">
                                    ${filterJson.name}
                                </label>
                            </div>
                        </li>`;

                            ulMobile.innerHTML +=
                                `<li class="ps-3">
                            <div class="form-check">
                                <input class="form-check-input ${filter} ${filterJson.name.replaceAll(' ', '')} checkbox-item ipt-menu brand-checkbox"
                                    type="checkbox"
                                    name="${filter}-mobile[]"
                                    id="flexCheckDefault"
                                    value="${filterJson.id}" data-name="${filterJson.name}">
                                <label class="form-check-label fs-5 lb-menu ps-2" for="flexCheckDefault">
                                    ${filterJson.name}
                                </label>
                            </div>
                        </li>`
                        }

                        $(`.${filter}`).click(function () {
                            var name = $(this).data('name');
                            if (!$(this).is(":checked")) {
                                removerFiltroPorNome(name)
                            } else {

                                adicionarFiltro(name);
                            }

                        });

                    }
                });


            }


            $(".js-range-slider").ionRangeSlider({
                type: "double",
                skin: "round",
                min: {{ minPrice }},
                max: {{ maxPrice }},
                from: {{ minPrice }},
                to: {{ maxPrice }},
                grid: true,
                prefix: "€"
            });

            $(".js-range-slider-mobile").ionRangeSlider({
                type: "double",
                skin: "round",
                min: {{ minPrice }},
                max: {{ maxPrice }},
                from: {{ minPrice }},
                to: {{ maxPrice }},
                grid: true,
                prefix: "€"
            });


            function loadFilter() {
                getFilters('brands');
                getFilters('equipaments');
                // getFilters('colors');
                // getFilters('sizes');
                getFilters('models');
            }

            loadFilter()


            $(".btn-search-div").click(function () {
                // $("#products").removeClass("slick-initialized slick-slider");
                // getProducts($('.search-bar').val(), '');
                //debugger;
                location.replace(`/store?search=${$('.search-bar').val()}`)

            })

            $(".search-bar").keyup(function (e) {
                // $("#products").removeClass("slick-initialized slick-slider");
                // getProducts($('.search-bar').val(), '');
                if (e.key == 'Enter') {

                    location.replace(`/store?search=${$('.search-bar').val()}`)
                }

            })

            // inicio filtros exibidos

            let filtrosSelecionados = [];

            // Referência para o input
            const filtroInput = document.getElementById('filtro');

            // Referência para a div de filtros selecionados
            const filtrosSelecionadosDiv = document.getElementById('filtros-selecionados');

            // Função para adicionar um filtro selecionado
            function adicionarFiltro(filtro) {

                if (filtro !== '') {
                    filtrosSelecionados.push(filtro);

                    // Cria a tag do filtro selecionado
                    const tag = document.createElement('div');
                    tag.classList.add('tag');
                    tag.innerHTML = filtro;

                    // Cria o botão para remover o filtro
                    const removerBtn = document.createElement('span');
                    removerBtn.classList.add('remover');

                    removerBtn.setAttribute("data-filter", `${filtro}`);

                    removerBtn.innerHTML = 'x';
                    removerBtn.addEventListener('click', function () {
                        removerFiltro(filtro);
                    });

                    // Adiciona o botão à tag do filtro
                    tag.appendChild(removerBtn);

                    // Adiciona a tag à div de filtros selecionados
                    filtrosSelecionadosDiv.appendChild(tag);

                }
            }

            // Função para remover um filtro selecionado
            function removerFiltro(filtro) {
                $(`.${filtro.replaceAll(' ', '')}`).prop("checked", false);

                filtrosSelecionados = filtrosSelecionados.filter(f => f !== filtro);
                atualizarFiltrosSelecionados();
            }

            function removerFiltroPorNome(nomeFiltro) {

                filtrosSelecionados = filtrosSelecionados.filter(filtro => filtro !== nomeFiltro);
                atualizarFiltrosSelecionados();
            }

            // Função para atualizar a exibição dos filtros selecionados
            function atualizarFiltrosSelecionados() {
                filtrosSelecionadosDiv.innerHTML = '';

                filtrosSelecionados.forEach(filtro => {
                    const tag = document.createElement('div');
                    tag.classList.add('tag');
                    tag.innerHTML = filtro;

                    const removerBtn = document.createElement('span');
                    removerBtn.classList.add('remover');
                    removerBtn.innerHTML = 'x';
                    removerBtn.addEventListener('click', function () {
                        removerFiltro(filtro);
                    });

                    tag.appendChild(removerBtn);
                    filtrosSelecionadosDiv.appendChild(tag);
                });
            }


            // fim filtros exibidos

            function createDropdownMenu(categories) {
                var dropdownMenu = document.createElement('ul');
                dropdownMenu.classList.add('gw-submenu');
                // dropdownMenu.classList.add('dropdown-toggle');

                for (var i = 0; i < categories.length; i++) {
                    var category = categories[i];
                    var listItem = document.createElement('li');

                    if (category.divider) {
                        var divider = document.createElement('hr');
                        divider.classList.add('dropdown-divider');
                        listItem.appendChild(divider);
                    } else {
                        var link = document.createElement('a');
                        link.classList.add('dropdown-item');
                        if (category.subcategories && category.subcategories.length > 0) {
                            link.classList.add('dropdown-toggle');
                            link.classList.add('textblack');
                        }


                        link.setAttribute('data-id', category.id);
                        // link.href = `/STORE?categoryId=${category.id}`;
                        link.innerText = category.name;
                        listItem.appendChild(link);

                        if (category.subcategories && category.subcategories.length > 0) {
                            var subMenu = createDropdownMenu(category.subcategories);
                            subMenu.classList.add('dropdown-menu');
                            subMenu.classList.add('subcategory');
                            subMenu.classList.add('dropend');

                            listItem.classList.add('dropdown-submenu');
                            listItem.appendChild(subMenu);
                        }
                    }

                    dropdownMenu.appendChild(listItem);
                }

                return dropdownMenu;
            }

            var selectedCategories = [];

            function loadCategories() {
                $.ajax({
                    type: "GET",
                    url: "{{ path('admin/get_categories_menu') }}",
                    success: function (categoriesJson) {
                        var ul = document.getElementById('categories')
                        ul.innerHTML = '';

                        var ulMobile = document.getElementById('categories-mobile')
                        ulMobile.innerHTML = '';


                        createCategoryMenu(categoriesJson, ul, ulMobile);


                    }
                });
            }
            function addProductToCart(product) {
                $.ajax({
                    url: `{{ bo_url }}add_product_to_cart`,
                    type: 'POST',
                    data: {product: product},
                    success: function (data) {
                        if(data.status) {
                            //debugger;
                            loadThisQuantityProductsCart();
                            $.alert({
                                title: 'Sucesso!',
                                content: 'Produto adicionado ao carrinho!',

                            });
                        }else
                        {
                            $.alert({
                                type: 'red',
                                title: 'Falha!',
                                content: 'Quantidade excede stock!',
                                boxWidth: '400px',
                                useBootstrap: false,
                                containerFluid: false,
                                columnClass: 'col-md-6 col-md-offset-3',
                                backgroundDismiss: true,
                                onClose: function() {
                                },
                                onOpen: function() {

                                    $('.jconfirm-content').css('color', 'red');
                                }
                            });
                        }
                    }
                })
                return 1;
            }

            function loadThisQuantityProductsCart() {
                $.ajax({
                    url: `/get_quantity_products_cart`,
                    type: 'GET',
                    success: function (quantity) {
                        $('.lblCartCount').text(quantity)
                    }
                })
            }
            loadCategories();


        </script>


    {% endblock %}

